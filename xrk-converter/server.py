from flask import Flask, request, send_file
import os
import subprocess
import uuid
import shutil

app = Flask(__name__)

runtime_root = r'C:\Program Files\MATLAB\MATLAB_Runtime\R2024b'
runtime_subdirs = [
    r'runtime\win64',
    r'bin\win64',
    r'sys\os\win64',
    r'sys\win64',
]

for subdir in runtime_subdirs:
    full_path = os.path.join(runtime_root, subdir)
    os.environ['PATH'] += os.pathsep + full_path

# Limit upload size to 100MB
app.config['MAX_CONTENT_LENGTH'] = 100 * 1024 * 1024

def safe_copy(src, dst_dir):
    if os.path.exists(src):
        shutil.copy(src, dst_dir)
    else:
        print(f"⚠️ Warning: Missing file {src}")

@app.route('/convert', methods=['POST'])
def convert_xrk():
    if 'file' not in request.files:
        return 'No file uploaded', 400

    # Unique folder per session
    session_id = str(uuid.uuid4())
    base_dir = os.path.join(os.getcwd(), 'tmp', session_id)
    os.makedirs(base_dir, exist_ok=True)

    # Save uploaded .xrk file
    file = request.files['file']
    xrk_path = os.path.join(base_dir, file.filename)
    file.save(xrk_path)

    # Copy compiled EXE + DLL
    compiled_dir = os.path.join(os.getcwd(), 'compiled')
    for fname in ['main.exe', 'MatLabXRK-2022-64-ReleaseU.dll']:
        safe_copy(os.path.join(compiled_dir, fname), base_dir)

    # Run the EXE
    exe_path = os.path.join(base_dir, 'main.exe')
    result = subprocess.run(
        [exe_path],
        cwd=base_dir,
        capture_output=True,
        text=True
    )

    print("STDOUT:\n", result.stdout)
    print("STDERR:\n", result.stderr)

    if result.returncode != 0:
        return f"❌ MATLAB execution failed:\n{result.stderr}", 500

    # Locate exported CSVs (assuming EXE writes to ./data/)
    export_dir = os.path.join(base_dir, 'data')
    if not os.path.isdir(export_dir):
        return "❌ No output generated by MATLAB app", 500

    # Zip result
    zip_path = f"{base_dir}.zip"
    shutil.make_archive(base_dir, 'zip', export_dir)

    return send_file(zip_path, as_attachment=True)

if __name__ == '__main__':
    os.makedirs('tmp', exist_ok=True)
    app.run(port=5000)
